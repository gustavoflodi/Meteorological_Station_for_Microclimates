# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, QThread, pyqtSignal
import socket as s
import sys



class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.IP_Servidor = '172.29.32.1'
        self.porta_servidor = 12345
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(700, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pressureLCD = QtWidgets.QLCDNumber(self.centralwidget)
        self.pressureLCD.setGeometry(QtCore.QRect(260, 290, 171, 51))
        self.pressureLCD.setObjectName("pressureLCD")
        self.temperatureLCD = QtWidgets.QLCDNumber(self.centralwidget)
        self.temperatureLCD.setGeometry(QtCore.QRect(260, 430, 171, 51))
        self.temperatureLCD.setObjectName("temperatureLCD")
        self.pressure_label = QtWidgets.QLabel(self.centralwidget)
        self.pressure_label.setGeometry(QtCore.QRect(260, 260, 171, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.pressure_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pressure_label.setFont(font)
        self.pressure_label.setObjectName("pressure_label")
        self.temperature_label = QtWidgets.QLabel(self.centralwidget)
        self.temperature_label.setGeometry(QtCore.QRect(240, 400, 221, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.temperature_label.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.temperature_label.setFont(font)
        self.temperature_label.setObjectName("temperature_label")
        self.connect_button = QtWidgets.QPushButton(self.centralwidget)
        self.connect_button.setGeometry(QtCore.QRect(240, 140, 221, 25))
        self.connect_button.setObjectName("connect_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 700, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.adicionado() #adicionado a interface em .ui

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pressure_label.setText(_translate("MainWindow", "Press√£o registrada:"))
        self.temperature_label.setText(_translate("MainWindow", "Temperatura registrada:"))
        self.connect_button.setText(_translate("MainWindow", "Connect Now!"))

    def adicionado(self): #Adicionado a ui feita
        self.setStyleSheet("background-image:url(./pictures/background_1.png)")
        self.connect_button.clicked.connect(self.conecta_servidor)  # runs the method

    def conecta_servidor(self):
        servidor = Servidor(self.IP_Servidor, self.porta_servidor)
        self.thread = QThread()
        self.worker = GetReadings(servidor)
        self.worker.moveToThread(self.thread)
        self.thread.started.connect(self.worker.run)
        self.worker.finished.connect(self.thread.quit)
        self.worker.finished.connect(self.worker.deleteLater)
        self.thread.finished.connect(self.thread.deleteLater)
        self.worker.temperatureLCD.connect(self.temperature_display)
        self.worker.pressureLCD.connect(self.pressure_display)
        self.thread.start()
    
    def temperature_display(self, num):
        self.temperatureLCD.display(num)

    def pressure_display(self, num):
        self.pressureLCD.display(num)

class GetReadings(QtCore.QObject):
        finished = pyqtSignal()
        pressureLCD = pyqtSignal(int)
        temperatureLCD = pyqtSignal(int)

        def __init__(self, servidor):
                super().__init__()
                self.flag = True
                self.servidor = servidor

        def run(self):
                while self.flag:
                        try:
                                received = self.servidor.receive()
                                msg = received.split('-')
                                if msg[0] == 'T':
                                        self.temperatureLCD.emit(int(msg[1]))
                                else:
                                        self.pressureLCD.emit(int(msg[1]))
                        except Exception as e:
                                print(str(e))
                                self.finished.emit()
                                self.raise_exception()
                                break

        def raise_exception(self):
                        self.flag = False



class Servidor():
        def __init__(self, IP_Servidor: str, porta_servidor: int):
                self.start(IP_Servidor, porta_servidor)

        def start(self, IP_Servidor: str, porta_servidor: int):
                with s.socket(s.AF_INET, s.SOCK_STREAM) as connect:
                        connect.bind((IP_Servidor, porta_servidor))
                        print('listening...')
                        connect.listen()
                        self.socket, addr = connect.accept()
                        print('Conectado de: ' + str(addr))

        def receive(self):
                return self.socket.recv(1024).decode('UTF-8')

if __name__ == '__main__':
        app = QtWidgets.QApplication(sys.argv)
        main_window = Ui_MainWindow()
        main_window.show()
        sys.exit(app.exec_())
